#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row; };

    combos {
        compatible = "zmk,combos";

        to-colemakdh {
            bindings = <&to 1>;
            key-positions = <60 63>;
            layers = <0>;
        };

        to-qwerty {
            bindings = <&to 0>;
            key-positions = <60 63>;
            layers = <1>;
        };

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <71 74>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&kp ESC    &kp F1  &kp F2    &kp F3    &kp F4       &kp F5                              &kp F6     &kp F7     &kp F8         &kp F9    &kp F10   &kp F11
&kp EQUAL  &kp N1  &kp N2    &kp N3    &kp N4       &kp N5                              &kp N6     &kp N7     &kp N8         &kp N9    &kp N0    &kp MINUS
&kp ESC    &kp Q   &kp W     &kp E     &kp R        &kp T                               &kp Y      &kp U      &kp I          &kp O     &kp P     &kp BSLH
&kp TAB    &kp A   &kp S     &kp D     &kp F        &kp G                               &kp H      &kp J      &kp K          &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C     &kp V        &kp B                               &kp N      &kp M      &kp COMMA      &kp DOT   &kp FSLH  &kp RSHFT
                   &kp LGUI  &kp LALT                                                                         &kp LALT       &kp LCMD
                                       &kp LCMD     &kp LEFT_ALT    &kp LEFT_CONTROL    &kp GRAVE  &kp BSPC   &lt 2 ENTER
                                       &lt 3 SPACE  &kp LEFT_SHIFT  &lt 5 ESCAPE        &kp CAPS   &lt 3 TAB  &kp BACKSPACE
            >;
        };

        colemak-dh {
            bindings = <
&kp ESC    &kp F1  &kp F2    &kp F3    &kp F4  &kp F5            &kp F6  &kp F7  &kp F8     &kp F9    &kp F10        &kp F11
&kp EQUAL  &kp N1  &kp N2    &kp N3    &kp N4  &kp N5            &kp N6  &kp N7  &kp N8     &kp N9    &kp N0         &kp MINUS
&trans     &kp Q   &kp W     &kp F     &kp P   &kp B             &kp J   &kp L   &kp U      &kp Y     &kp SEMICOLON  &kp BSLH
&trans     &kp A   &kp R     &kp S     &kp T   &kp G             &kp M   &kp N   &kp E      &kp I     &kp O          &kp SQT
&trans     &kp Z   &kp X     &kp C     &kp D   &kp V             &kp K   &kp H   &kp COMMA  &kp DOT   &kp FSLH       &kp RSHFT
                   &kp LGUI  &kp LALT                                            &kp LALT   &kp LCMD
                                       &trans  &trans  &trans    &trans  &trans  &trans
                                       &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans          &trans            &trans        &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans          &trans            &trans        &trans     &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans            &trans  &trans          &trans            &trans        &trans     &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &kp N0            &trans  &kp LEFT        &kp UP_ARROW      &kp DOWN      &kp RIGHT  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans            &trans  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LCMD   &trans
                &trans  &trans                                                    &trans            &trans
                                &trans  &trans  &trans    &trans  &trans          &trans
                                &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };

        symbol_layer {
            bindings = <
&trans           &trans            &trans                    &trans                 &trans             &trans                  &trans  &trans         &trans    &trans             &trans            &trans
&trans           &trans            &trans                    &trans                 &trans             &trans                  &trans  &trans         &trans    &trans             &trans            &trans
&kp GRAVE        &kp LEFT_BRACKET  &kp LS(LEFT_PARENTHESIS)  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp PERIOD              &trans  &trans         &trans    &trans             &trans            &trans
&kp EXCLAMATION  &kp COMMA         &kp LEFT_BRACE            &kp RIGHT_BRACE        &kp SEMI           &kp QUESTION            &trans  &kp LESS_THAN  &kp PIPE  &kp MINUS          &kp GREATER_THAN  &trans
&kp TILDE        &kp CARET         &kp KP_EQUAL              &kp UNDER              &kp DOLLAR         &kp STAR                &trans  &kp AMPERSAND  &kp SQT   &kp DOUBLE_QUOTES  &kp PLUS          &trans
                                   &trans                    &trans                                                                                   &trans    &trans
                                                                                    &trans             &trans        &trans    &trans  &trans         &trans
                                                                                    &trans             &trans        &trans    &trans  &trans         &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans                      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans                      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &msc SCRL_UP                &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans          &trans          &trans           &trans                      &trans  &trans  &trans  &trans  &trans  &trans
                &trans          &trans                                                                       &trans  &trans
                                                &mkp MCLK        &trans          &mkp MB5    &trans  &trans  &trans
                                                &mkp LCLK        &mkp RCLK       &mkp MB4    &trans  &trans  &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                    &trans          &trans           &trans           &trans           &trans           &trans
&trans       &trans        &trans        &trans        &trans        &trans                    &trans          &trans           &trans           &trans           &trans           &trans
&sys_reset   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &studio_unlock            &studio_unlock  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                    &trans          &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 0        &trans        &trans        &trans        &trans        &trans                    &trans          &trans           &trans           &trans           &trans           &to 0
                           &bt BT_CLR    &trans                                                                                 &rgb_ug RGB_TOG  &rgb_ug RGB_EFF
                                                       &trans        &trans          &trans    &trans          &trans           &trans
                                                       &trans        &trans          &trans    &trans          &trans           &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans                                            &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

//right hand trackball configuration

&trackball_peripheral_listener {
    input-processors =
        // this gets it to the default installation orientation,,,,,,,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>;

    // activate layer 3 within 500ms of the trackball moving
    // <&zip_temp_layer 3 500>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // this gets it to the default installation orientation,,,,,,,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,,,,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
