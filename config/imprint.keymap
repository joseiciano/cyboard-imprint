#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row; };

    combos {
        compatible = "zmk,combos";

        to-colemakdh {
            bindings = <&to 1>;
            key-positions = <60 63>;
            layers = <0>;
        };

        to-qwerty {
            bindings = <&to 0>;
            key-positions = <60 63>;
            layers = <1>;
        };

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <71 74>;
        };
    };

    behaviors {
        Tap_Preferred_180ms: Tap_Preferred_180ms {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED_180MS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <180>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&none      &none                        &none                                &none                            &none                              &none                         &none      &none                              &none                                &none                                  &none                           &none
&none      &none                        &none                                &none                            &none                              &none                         &none      &none                              &none                                &none                                  &none                           &none
&kp ESC    &kp Q                        &kp W                                &kp E                            &kp R                              &kp T                         &kp Y      &kp U                              &kp I                                &kp O                                  &kp P                           &kp LEFT_CONTROL
&kp TAB    &kp A                        &kp S                                &kp D                            &kp F                              &kp G                         &kp H      &kp J                              &kp K                                &kp L                                  &kp SEMI                        &kp SQT
&kp LSHFT  &Tap_Preferred_180ms LCMD Z  &Tap_Preferred_180ms LEFT_CONTROL X  &Tap_Preferred_180ms LEFT_ALT C  &Tap_Preferred_180ms LEFT_SHIFT V  &kp B                         &kp N      &Tap_Preferred_180ms LEFT_SHIFT M  &Tap_Preferred_180ms LEFT_ALT COMMA  &Tap_Preferred_180ms LEFT_CONTROL DOT  &Tap_Preferred_180ms LCMD FSLH  &kp LEFT_CONTROL
                                        &kp LGUI                             &kp LALT                                                                                                                                        &kp LALT                             &kp LCMD
                                                                                                              &lt 3 SPACE                        &lt 4 ESCAPE      &kp TAB     &lt 5 TAB  &lt 2 ENTER                        &lt 3 BACKSPACE
                                                                                                              &lt 3 SPACE                        &kp LEFT_CONTROL  &kp CAPS    &kp CAPS   &kp DELETE                         &kp INSERT
            >;
        };

        colemak-dh {
            bindings = <
&none   &none                              &none                                &none                            &none                                &none             &none   &none                                &none                                &none                                  &none                                 &none
&none   &none                              &none                                &none                            &none                                &none             &none   &none                                &none                                &none                                  &none                                 &none
&trans  &kp Q                              &kp W                                &kp F                            &kp P                                &kp B             &kp J   &kp L                                &kp U                                &kp Y                                  &kp SEMICOLON                         &trans
&trans  &kp A                              &kp R                                &kp S                            &kp T                                &kp G             &kp M   &kp N                                &kp E                                &kp I                                  &kp O                                 &trans
&trans  &Tap_Preferred_180ms LEFT_SHIFT Z  &Tap_Preferred_180ms LEFT_CONTROL X  &Tap_Preferred_180ms LEFT_ALT C  &Tap_Preferred_180ms LEFT_COMMAND D  &kp V             &kp K   &Tap_Preferred_180ms LEFT_COMMAND H  &Tap_Preferred_180ms LEFT_ALT COMMA  &Tap_Preferred_180ms LEFT_CONTROL DOT  &Tap_Preferred_180ms LEFT_SHIFT FSLH  &trans
                                           &trans                               &trans                                                                                                                               &trans                               &trans
                                                                                                                 &trans                               &trans  &trans    &trans  &trans                               &trans
                                                                                                                 &trans                               &trans  &trans    &trans  &trans                               &trans
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans          &trans        &trans            &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans          &trans        &trans            &trans            &trans
&none   &none   &kp N7  &kp N8  &kp N9  &none             &none   &none           &none         &none             &none             &none
&none   &none   &kp N4  &kp N5  &kp N6  &kp N0            &none   &kp LEFT        &kp UP_ARROW  &kp DOWN          &kp RIGHT         &none
&none   &none   &kp N1  &kp N2  &kp N3  &none             &none   &kp LEFT_SHIFT  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_COMMAND  &none
                &trans  &trans                                                    &trans        &trans
                                &trans  &trans  &trans    &trans  &trans          &trans
                                &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };

        symbol_layer {
            bindings = <
&trans           &trans                &trans                     &trans                 &trans                   &trans                  &trans  &trans                      &trans            &trans                          &trans               &trans
&trans           &trans                &trans                     &trans                 &trans                   &trans                  &trans  &trans                      &trans            &trans                          &trans               &trans
&kp GRAVE        &kp LEFT_BRACKET      &kp LS(LEFT_PARENTHESIS)   &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET        &kp PERIOD              &none   &none                       &kp SLASH         &kp BACKSLASH                   &none                &none
&kp EXCLAMATION  &kp LCMD              &kp LEFT_BRACE             &kp RIGHT_BRACE        &kp SEMI                 &kp QUESTION            &none   &kp LESS_THAN               &kp PIPE          &kp MINUS                       &kp GREATER_THAN     &none
&kp TILDE        &mt LEFT_SHIFT CARET  &mt LEFT_CONTROL KP_EQUAL  &mt LEFT_ALT UNDER     &mt LEFT_COMMAND DOLLAR  &kp STAR                &none   &mt LEFT_COMMAND AMPERSAND  &mt LEFT_ALT SQT  &mt LEFT_CONTROL DOUBLE_QUOTES  &mt LEFT_SHIFT PLUS  &none
                                       &trans                     &trans                                                                                                      &trans            &trans
                                                                                         &trans                   &trans        &trans    &trans  &trans                      &trans
                                                                                         &trans                   &trans        &trans    &trans  &trans                      &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                    &trans          &trans           &trans           &trans           &trans           &trans
&trans       &trans        &trans        &trans        &trans        &trans                    &trans          &trans           &trans           &trans           &trans           &trans
&sys_reset   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &studio_unlock            &studio_unlock  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &none         &none         &none         &none         &none                     &none           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 0        &none         &none         &none         &none         &none                     &none           &kp C_VOLUME_UP  &kp C_VOL_DN     &kp K_MUTE       &none            &to 0
                           &bt BT_CLR    &trans                                                                                 &rgb_ug RGB_TOG  &rgb_ug RGB_EFF
                                                       &trans        &trans          &trans    &trans          &trans           &trans
                                                       &trans        &trans          &trans    &trans          &trans           &trans
            >;
        };

        Mouse_Normal {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans                      &trans  &trans            &trans        &trans            &trans          &trans
&trans  &trans  &trans          &trans          &trans           &trans                      &trans  &trans            &trans        &trans            &trans          &trans
&none   &none   &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &msc SCRL_UP                &none   &none             &none         &none             &none           &none
&none   &none   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN              &none   &kp LEFT_ARROW    &kp UP_ARROW  &kp DOWN          &kp RIGHT       &none
&none   &none   &mkp RCLK       &mkp MCLK       &mkp LCLK        &mkp MCLK                   &none   &kp LEFT_COMMAND  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none
                &trans          &trans                                                                                 &trans        &trans
                                                &mkp LCLK        &mkp RCLK       &mkp MB5    &trans  &trans            &trans
                                                &mkp LCLK        &mkp RCLK       &mkp MB4    &trans  &trans            &trans
            >;
        };
    };
};

// right hand trackball configuration

&trackball_peripheral_listener {
    input-processors =
        // activate mouse layer within 500 ms of the trackball moving ,,,,,,,,,
        <&zip_temp_layer 5 500>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 12 (make it slower for scrolling),,,,,,,,
        <&zip_xy_scaler 1 16>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
