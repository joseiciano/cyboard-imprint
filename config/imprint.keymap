#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row; };

    combos {
        compatible = "zmk,combos";

        to-colemakdh {
            bindings = <&to 1>;
            key-positions = <60 63>;
            layers = <0>;
        };

        to-qwerty {
            bindings = <&to 0>;
            key-positions = <60 63>;
        };

        capslock {
            bindings = <&caps_word>;
            key-positions = <71 74>;
            layers = <0 1>;
        };

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <65 68>;
            layers = <0 1>;
        };

        Insert {
            bindings = <&kp INSERT>;
            key-positions = <72 73>;
            layers = <0 1>;
        };

        toKeyboardControl {
            bindings = <&to 4>;
            key-positions = <61 62>;
            layers = <0 1>;
        };

        tabbtn {
            bindings = <&kp TAB>;
            key-positions = <70 75>;
        };
    };

    behaviors {
        Tap_Preferred_180ms: Tap_Preferred_180ms {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED_180MS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "tap-preferred";
        };

        new_mouse_speed_test: new_mouse_speed_test {
            compatible = "zmk,behavior-mouse-key-press";
            label = "NEW_MOUSE_SPEED_TEST";
            #binding-cells = <1>;
        };

        Mouse_up: Mouse_up {
            compatible = "zmk,behavior-input-two-axis";
            label = "MOUSE_UP";
            #binding-cells = <1>;
            x-input-code = <0>;
            y-input-code = <(-16)>;
            time-to-max-speed-ms = <1>;
        };
    };

    macros {
        move_tab_to_start: move_tab_to_start {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp LEFT_SHIFT &kp HOME>;
            label = "MOVE_TAB_TO_START";
        };

        move_tab_to_end: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp LEFT_SHIFT &kp END>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&none      &none                              &none                            &none                                &none                                &none                  &none  &none                                &none                                &none                            &none                              &none
&none      &none                              &none                            &none                                &none                                &none                  &none  &none                                &none                                &none                            &none                              &none
&kp ESC    &Tap_Preferred_180ms LEFT_SHIFT Q  &Tap_Preferred_180ms LEFT_ALT W  &Tap_Preferred_180ms LEFT_CONTROL E  &Tap_Preferred_180ms LEFT_COMMAND R  &kp T                  &kp Y  &Tap_Preferred_180ms LEFT_COMMAND U  &Tap_Preferred_180ms LEFT_CONTROL I  &Tap_Preferred_180ms LEFT_ALT O  &Tap_Preferred_180ms LEFT_SHIFT P  &kp LC(A)
&kp TAB    &kp A                              &kp S                            &kp D                                &kp F                                &kp G                  &kp H  &kp J                                &kp K                                &kp L                            &kp SEMI                           &kp SQT
&kp LSHFT  &kp Z                              &kp X                            &kp C                                &kp V                                &kp B                  &kp N  &kp M                                &kp COMMA                            &kp PERIOD                       &kp SLASH                          &kp LEFT_CONTROL
                                              &kp LEFT_ALT                     &kp LC(A)                                                                                                                                    &kp LC(A)                            &kp LEFT_ALT
                                                                                                                    &lt 2 SPACE                          &lt 3 ESCAPE  &mo 5    &mo 5  &lt 3 ENTER                          &lt 2 BACKSPACE
                                                                                                                    &lt 4 TAB                            &kp LC(A)     &mo 5    &mo 5  &kp LC(A)                            &lt 4 TAB
            >;
        };

        colemak-dh {
            bindings = <
&none   &none                              &none                            &none                                &none                              &none             &none   &none                                &none                                &none                            &none                                 &none
&none   &none                              &none                            &none                                &none                              &none             &none   &none                                &none                                &none                            &none                                 &none
&trans  &Tap_Preferred_180ms LEFT_SHIFT Q  &Tap_Preferred_180ms LEFT_ALT W  &Tap_Preferred_180ms LEFT_CONTROL F  &Tap_Preferred_180ms LEFT_SHIFT P  &kp B             &kp J   &Tap_Preferred_180ms LEFT_COMMAND L  &Tap_Preferred_180ms LEFT_CONTROL U  &Tap_Preferred_180ms LEFT_ALT Y  &Tap_Preferred_180ms LEFT_SHIFT SEMI  &trans
&trans  &kp A                              &kp R                            &kp S                                &kp T                              &kp G             &kp M   &kp N                                &kp E                                &kp I                            &kp O                                 &trans
&trans  &kp Z                              &kp X                            &kp C                                &kp D                              &kp V             &kp K   &kp H                                &kp COMMA                            &kp DOT                          &kp SLASH                             &trans
                                           &trans                           &trans                                                                                                                                 &trans                               &trans
                                                                                                                 &trans                             &trans  &trans    &trans  &trans                               &trans
                                                                                                                 &trans                             &trans  &trans    &trans  &trans                               &trans
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans              &trans            &trans            &trans        &trans          &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans              &trans            &trans            &trans        &trans          &trans
&none   &none   &kp N7  &kp N8  &kp N9  &none             &move_tab_to_start  &kp LEFT_COMMAND  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_SHIFT  &none
&none   &none   &kp N4  &kp N5  &kp N6  &kp N0            &move_tab_to_end    &kp LEFT          &kp UP_ARROW      &kp DOWN      &kp RIGHT       &none
&none   &none   &kp N1  &kp N2  &kp N3  &none             &none               &none             &none             &none         &none           &none
                &trans  &trans                                                                  &trans            &trans
                                &trans  &trans  &trans    &trans              &trans            &trans
                                &trans  &trans  &trans    &trans              &trans            &trans
            >;
        };

        symbol_layer {
            bindings = <
&trans           &trans                                        &trans                                          &trans                                               &trans                                           &trans                       &trans             &trans                                       &trans                                   &trans                              &trans                                        &trans
&trans           &trans                                        &trans                                          &trans                                               &trans                                           &trans                       &trans             &trans                                       &trans                                   &trans                              &trans                                        &trans
&kp GRAVE        &Tap_Preferred_180ms LEFT_SHIFT LEFT_BRACKET  &Tap_Preferred_180ms LEFT_ALT LEFT_PARENTHESIS  &Tap_Preferred_180ms LEFT_CONTROL RIGHT_PARENTHESIS  &Tap_Preferred_180ms LEFT_COMMAND RIGHT_BRACKET  &kp PERIOD                   &kp TILDE          &Tap_Preferred_180ms LEFT_COMMAND LESS_THAN  &Tap_Preferred_180ms LEFT_CONTROL MINUS  &Tap_Preferred_180ms LEFT_ALT PIPE  &Tap_Preferred_180ms LEFT_SHIFT GREATER_THAN  &none
&kp EXCLAMATION  &kp COMMA                                     &kp LEFT_BRACE                                  &kp RIGHT_BRACE                                      &kp SEMI                                         &kp QUESTION                 &kp DOUBLE_QUOTES  &kp PERIOD                                   &kp ASTERISK                             &kp COLON                           &kp SLASH                                     &kp BACKSLASH
&kp HASH         &kp CARET                                     &kp EQUAL                                       &kp UNDER                                            &kp DOLLAR                                       &kp AT                       &kp SINGLE_QUOTE   &kp AMPS                                     &kp PLUS                                 &kp PERCENT                         &kp STAR                                      &none
                                                               &trans                                          &trans                                                                                                                                                                                             &trans                                   &trans
                                                                                                                                                                    &kp COMMA                                        &kp COLON     &kp AT_SIGN    &trans             &trans                                       &trans
                                                                                                                                                                    &kp PERIOD                                       &kp ASTERISK  &kp AT_SIGN    &trans             &trans                                       &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                    &trans          &trans           &trans           &trans           &trans           &trans
&trans       &trans        &trans        &trans        &trans        &trans                    &trans          &trans           &trans           &trans           &trans           &trans
&sys_reset   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &studio_unlock            &studio_unlock  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &none         &none         &none         &none         &none                     &none           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 0        &none         &none         &none         &none         &none                     &none           &kp C_VOLUME_UP  &kp C_VOL_DN     &kp K_MUTE       &none            &to 0
                           &bt BT_CLR    &trans                                                                                 &rgb_ug RGB_TOG  &rgb_ug RGB_EFF
                                                       &trans        &trans          &trans    &trans          &trans           &trans
                                                       &trans        &trans          &trans    &trans          &trans           &trans
            >;
        };

        Mouse_Normal {
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans                      &trans  &trans            &trans            &trans        &trans          &trans
&trans  &trans  &trans          &trans          &trans           &trans                      &trans  &trans            &trans            &trans        &trans          &trans
&none   &none   &mkp RCLK       &mmv MOVE_UP    &mkp LCLK        &msc SCRL_UP                &none   &kp LEFT_COMMAND  &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_SHIFT  &none
&none   &none   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN              &none   &kp LEFT_ARROW    &kp UP_ARROW      &kp DOWN      &kp RIGHT       &none
&none   &none   &msc SCRL_LEFT  &mkp MCLK       &msc SCRL_RIGHT  &mkp MCLK                   &none   &none             &none             &none         &none           &none
                &trans          &trans                                                                                 &trans            &trans
                                                &mkp LCLK        &mkp RCLK       &mkp MB5    &trans  &mkp RCLK         &mkp LCLK
                                                &mkp LCLK        &mkp RCLK       &mkp MB4    &trans  &mkp RCLK         &mkp LCLK
            >;
        };

        typing {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans                                            &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

// right hand trackball configuration

&trackball_peripheral_listener {
    input-processors =
        // activate mouse layer within 500 ms of the trackball moving ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_temp_layer 5 500>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // multiply sensitivity by 1, divide by 12 (make it slower for scrolling),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_xy_scaler 1 16>,
        // make this trackball output scrolling events by default instead of cursor movement,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
